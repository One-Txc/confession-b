# LOG4J配置
log4j.rootCategory=INFO, stdout, info, warn, error
log4j.category.com.didispace=INFO

# 控制台输出
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c:%L - %m%n


# info日志输出
log4j.appender.info=org.apache.log4j.DailyRollingFileAppender
log4j.appender.info.file=logs/info.log
log4j.appender.info.DatePattern='.'yyyy-MM-dd
log4j.appender.info.Threshold = INFO
log4j.appender.info.layout=org.apache.log4j.PatternLayout
log4j.appender.info.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c:%L - %m%n

# warn日志输出
log4j.appender.warn=org.apache.log4j.DailyRollingFileAppender
# 服务器上用绝对路径可能比较好
log4j.appender.warn.file=logs/warn.log
log4j.appender.warn.DatePattern='.'yyyy-MM-dd
log4j.appender.warn.Threshold = WARN
log4j.appender.warn.layout=org.apache.log4j.PatternLayout
log4j.appender.warn.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c:%L - %m%n

# error日志输出
log4j.appender.error=org.apache.log4j.DailyRollingFileAppender
#文件会在jar包的同级目录下
#docker化用绝对目录方便挂载,不过相对也是可以的
log4j.appender.error.file=logs/error.log
log4j.appender.error.DatePattern='.'yyyy-MM-dd
log4j.appender.error.Threshold = ERROR
log4j.appender.error.layout=org.apache.log4j.PatternLayout
log4j.appender.error.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c:%L - %m%n



